{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","firebase/config.js","hooks/useForm.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","loading","msgError","notes","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebase","initializeApp","db","firestore","googleAuthProvider","GoogleAuthProvider","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","setError","removeError","finishLoading","loadNotes","a","collection","get","notesSnap","forEach","sonSnap","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","addNewNote","activeNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","login","startLoginWithEmailAndPassword","email","password","signInWithEmailAndPassword","then","user","catch","e","message","startLogout","signOut","logout","LoginScreen","useDispatch","useSelector","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","onChange","autoComplete","placeholder","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","confirm","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailAndPasswordName","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","key","Sidebar","newNote","Date","getTime","add","docRef","NotesAppBar","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","display","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","NothingSelected","JournalScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.93faea58.chunk.js","sourcesContent":["\nexport const types = {\n  login: '[Auth] Login',\n  logout: '[Auth] Logout',\n\n  uiSetError: '[UI] Set Error',\n  uiRemoveError: '[UI] Remove Error',\n  uiStartLoading: '[UI] Start Loading',\n  uiFinishLoading: '[UI] Finish Loading',\n\n  notesAddNew: '[Notes] New Note',\n  notesActive: '[Notes] Set Active Note',\n  notesLoad: '[Notes] Load Notes',\n  notesUpdated: '[Notes] Update Note',\n  notesFileUrl: '[Notes] Update Image Url',\n  notesDelete: '[Notes] Delete Note',\n  notesLogoutCleaning: '[Notes] Logout Cleaning'\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n  loading: false, msgError: null\n};\n\nexport const uiReducer = ( state = initialState, action ) => {\n  switch (action.type) {\n    case types.uiSetError:\n      return { ...state, msgError: action.payload };\n\n    case types.uiRemoveError:\n      return { ...state, msgError: null }\n\n    case types.uiStartLoading:\n      return { ...state, loading: !state.loading }\n\n    case types.uiFinishLoading:\n      return { ...state, loading: !state.loading }\n\n    default: return state;\n  }\n}\n","import { types } from '../types/types';\n\nconst initialState = { notes: [], active: null }\n\nexport const notesReducer = ( state = initialState, action ) => {\n  \n  switch (action.type) {\n    case types.notesAddNew:\n      return {...state, notes: [ action.payload, ...state.notes ]};\n\n    case types.notesActive:\n      return {...state, active: {...action.payload }};\n\n    case types.notesLoad:\n      return {...state, notes: [...action.payload ]};\n\n    case types.notesUpdated:\n      return {...state, notes: state.notes.map( note => note.id === action.payload.id ? action.payload.note : note )};\n\n      case types.notesDelete:\n        return {...state, active: null, notes: state.notes.filter( note => note.id !== action.payload )};\n\n      case types.notesLogoutCleaning:\n        return initialState;\n\n    default: return state;\n  };\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\n// const devtools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer\n});\n\nexport const store = createStore( reducers, composeEnhancers( applyMiddleware( thunk )));\n\n","import { types } from \"../types/types\";\n\nexport const authReducer = ( state = {}, action ) => {\n\n  switch (action.type) {\n\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName\n      }\n\n    case types.logout:\n      return {}\n\n    default: return state;\n  }\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase\nif (process.env.NODE_ENV === 'test') {\n  firebase.initializeApp( firebaseConfig );\n\n\n} else {\n  firebase.initializeApp( firebaseConfig );\n}\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, googleAuthProvider, firebase };\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = ( newFormState = initialState ) => {\n    setValues( newFormState );\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n","import { types } from \"../types/types\"\n\nexport const setError = ( msgError ) => {\n  return { type: types.uiSetError, payload: msgError };\n}\n\nexport const removeError = () => {\n  return { type: types.uiRemoveError };\n}\n\nexport const startLoading = () => {\n  return { type: types.uiStartLoading };\n}\n\nexport const finishLoading = () => {\n  return { type: types.uiFinishLoading };\n}\n","import { db } from \"../firebase/config\"\n\nexport const loadNotes = async ( uid ) => {\n\n  const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\n  const notes = [];\n\n  notesSnap.forEach( sonSnap => {\n    notes.push({ id: sonSnap.id, ...sonSnap.data() });\n  });\n\n  return notes;\n}\n","export const fileUpload = async ( file ) => {\n\n  const cloudUrl = 'https://api.cloudinary.com/v1_1/do34jradz/upload';\n\n  const formData = new FormData();\n  formData.append('upload_preset', 'react-journal');\n  formData.append('file', file );\n  \n  try {\n\n    const resp = await fetch( cloudUrl, { method: 'POST', body: formData });\n\n    if (resp.ok) {\n      \n      const cloudResp = await resp.json();\n\n      return cloudResp?.secure_url;\n\n    } else {\n      // throw await resp.json();\n      return null;\n    }\n    \n  } catch ( err ) {\n    throw err;\n  }\n};\n","import Swal from 'sweetalert2';\n\nimport { db } from \"../firebase/config\";\nimport { types } from \"../types/types\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { fileUpload } from '../helpers/fileUpload';\n\nexport const startNewNote = () => {\n  return async ( dispatch, getState ) => {\n    const uid = getState().auth.uid;\n\n    const newNote = { title: '', body: '', date: new Date().getTime() };\n\n    const docRef = await db.collection(`${ uid }/journal/notes`).add( newNote );\n\n    dispatch( activeNote( docRef.id, newNote ));\n    dispatch( addNewNote( docRef.id, newNote ));\n  };\n};\n\nexport const addNewNote = ( id, note ) => {\n  return { type: types.notesAddNew, payload: { id, ...note }};\n};\n\nexport const activeNote = ( id, note ) => {\n  return { type: types.notesActive, payload: { id, ...note }};\n};\n\nexport const startLoadingNotes = ( uid ) => {\n  return async ( dispatch ) => {\n\n    const notes = await loadNotes( uid );\n    dispatch( setNotes( notes ));\n  };\n};\n\nexport const setNotes = ( notes ) => {\n  return { type: types.notesLoad, payload: notes };\n};\n\nexport const startSaveNote = ( note ) => {\n  return async ( dispatch, getState ) => {\n    \n    const { uid } = getState().auth;\n\n    if (!note.url) { delete note.url };\n    \n    const noteToFirestore = {...note };\n    delete noteToFirestore.id;\n\n    await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n\n    dispatch( refreshNote( note.id, note ));\n    Swal.fire('Saved', note.title, 'success');\n  };\n};\n\nexport const refreshNote = ( id, note ) => ({ type: types.notesUpdated, payload: { id, note: { id, ...note }}});\n\nexport const startUploading = ( file ) => {\n  return async ( dispatch, getState ) => {\n\n    const { active: activeNote } = getState().notes;\n\n    Swal.fire({ title: 'Uploading...', text: 'Please wait...', allowOutsideClick: false, onBeforeOpen: () => Swal.showLoading() });\n    \n    const fileUrl = await fileUpload( file );\n    \n    activeNote.url = fileUrl;\n    dispatch( startSaveNote( activeNote ));\n    Swal.close();\n  };\n};\n\nexport const startDeleting = ( id ) => {\n  return async ( dispatch, getState ) => {\n\n    const { uid } = getState().auth;\n\n    await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n    dispatch( deleteNote( id ));\n    // Swal.fire();\n  };\n};\n\nexport const deleteNote = ( id ) => ({ type: types.notesDelete, payload: id });\n\nexport const noteLogout = () => ({ type: types.notesLogoutCleaning });\n","import Swal from 'sweetalert2';\n\nimport { types } from \"../types/types\"\nimport { firebase, googleAuthProvider } from \"../firebase/config\";\nimport { startLoading, finishLoading } from \"./ui\";\nimport { noteLogout } from './notes';\n\nexport const login = ( uid, displayName ) => ({ type: types.login, payload: { uid, displayName }});\n\nexport const startLoginWithEmailAndPassword = ( email, password ) => {\n  return ( dispatch ) => {\n\n    dispatch( startLoading());\n    \n    return firebase.auth().signInWithEmailAndPassword( email, password ).then(({ user }) => {\n\n      dispatch( login( user.uid, user.displayName ));\n      dispatch( finishLoading());\n    }).catch( e => {\n      dispatch( finishLoading());\n      Swal.fire('Error', e.message, 'error');\n    });\n  }\n};\n\nexport const startRegisterWithEmailAndPasswordName = ( email, password, name ) => {\n  return ( dispatch ) => {\n    firebase.auth().createUserWithEmailAndPassword( email, password ).then( async ({ user }) => {\n      await user.updateProfile({ displayName: name });\n\n      dispatch( login( user.uid, user.displayName ));\n    }).catch( e => {\n      dispatch( finishLoading());\n      Swal.fire('Error', e.message, 'error');\n    });\n  };\n};\n\nexport const startGoogleLogin = () => {\n  return ( dispatch ) => {\n    firebase.auth().signInWithPopup( googleAuthProvider ).then(({ user }) => {\n      dispatch( login( user.uid, user.displayName ));\n    });\n  };\n};\n\nexport const startLogout = () => {\n  return ( dispatch ) => {\n    firebase.auth().signOut().then(() => {\n      dispatch( logout());\n      dispatch( noteLogout());\n    });\n  };\n};\n\nexport const logout = () => ({ type: types.logout });\n","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLoginWithEmailAndPassword, startGoogleLogin } from '../../actions/auth';\nimport validator from 'validator';\nimport { setError, removeError } from '../../actions/ui';\n\nexport const LoginScreen = () => {\n\n  const dispatch = useDispatch();\n  const ui = useSelector( state => state.ui );\n\n  const [{ email, password }, handleInputChange ] = useForm({\n    email: 'gian7773@gmail.com', password: '1234567'\n  });\n\n  const handleLogin = ( e ) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch( startLoginWithEmailAndPassword( email, password ));\n    }\n  }\n\n  const handleGoogleLogin = ( e ) => {\n    e.preventDefault();\n\n    dispatch( startGoogleLogin());\n  }\n\n  const isFormValid = () => {\n    if (!validator.isEmail( email )) {\n      dispatch( setError('Email is not valid'));\n      return false;\n    } else if ( password.length < 7) {\n      dispatch( setError('Password should be at least 7 characters and match'));\n      return false;\n    }\n    dispatch( removeError());\n    return true;\n  };\n  \n  return (\n    <>\n      <h3 className=\"auth-main__login-tittle\">Login</h3>\n\n      <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\n\n        {\n          ui.msgError && <div className=\"auth-main__alert-error\">{ ui.msgError }</div>\n        }\n\n        <input value={ email } onChange={ handleInputChange } type=\"text\" name=\"email\" className=\"auth-main__input\" autoComplete=\"off\" placeholder=\"Email\" />\n        <input value={ password } onChange={ handleInputChange } type=\"password\" name=\"password\" className=\"auth-main__input\" placeholder=\"Password\" />\n\n        <button disabled={ ui.loading } type=\"submit\" className=\"btn btn--primary btn--block\">Login</button>\n\n        <hr />\n\n        <div className=\"auth-main__social-network\">\n          <p>Login with social network</p>\n\n          <div onClick={ handleGoogleLogin } className=\"google-btn\">\n            <div className=\"google-icon-wrapper\">\n              <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n            </div>\n            <p className=\"btn-text\">\n              <b>Sign in with google</b>\n            </p>\n          </div>\n\n        </div>\n\n        <Link to=\"/auth/register\" className=\"link\">Create new Account</Link>\n      </form>\n    </>\n  );\n}\n","import React from 'react'\nimport validator from 'validator';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setError, removeError } from '../../actions/ui';\nimport { startRegisterWithEmailAndPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n  \n  const dispatch = useDispatch();\n  const ui = useSelector( state => state.ui );\n\n  const [{ name, email, password, confirm }, handleInputChange ] = useForm({\n    name: 'gian', email: 'gian773@gmail.com', password: '1234567', confirm: '1234567'\n  });\n\n  const handleRegister = ( e ) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch( startRegisterWithEmailAndPasswordName( email, password, name ));\n    }\n  };\n  const isFormValid = () => {\n  \n    if (name.trim().length === 0) {\n      dispatch( setError('Name is required'));\n      return false;\n\n    } else if (!validator.isEmail( email )) {\n      dispatch( setError('Email is not valid'));\n      return false;\n\n    } else if ( password !== confirm || password.length < 7) {\n      dispatch( setError('Password should be at least 7 characters and match'));\n      return false;\n    }\n\n    dispatch( removeError());\n    return  true;\n  };\n  \n  return (\n    <>\n      <h3 className=\"auth-main__login-tittle\">Register</h3>\n\n      <form onSubmit={ handleRegister } className=\"animate__animated animate__fadeIn animate__faster\">\n\n        {\n          ui.msgError && <div className=\"auth-main__alert-error\">{ ui.msgError }</div>\n        }\n        \n        <input value={ name } onChange={ handleInputChange } type=\"text\" name=\"name\" className=\"auth-main__input\" autoComplete=\"off\" placeholder=\"Name\" />\n        <input value={ email } onChange={ handleInputChange } type=\"text\" name=\"email\" className=\"auth-main__input\" autoComplete=\"off\" placeholder=\"Email\" />\n        <input value={ password } onChange={ handleInputChange } type=\"password\" name=\"password\" className=\"auth-main__input\" placeholder=\"Password\" />\n        <input value={ confirm } onChange={ handleInputChange } type=\"password\" name=\"confirm\" className=\"auth-main__input\" placeholder=\"Confirm Password\" />\n\n        <button type=\"submit\" className=\"btn btn--primary btn--block mb-5\">Register</button>\n\n        <Link to=\"/auth/login\" className=\"link\">Already registered?</Link>\n      </form>\n    </>\n  );\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth-main\">\n      <div className=\"auth-main__box-container\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={ LoginScreen } />\n          <Route exact path=\"/auth/register\" component={ RegisterScreen } />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom'\n\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route {...rest } component={( props ) => (( isAuthenticated ) ? (<Redirect to=\"/\" />) : (<Component {...props } />))} />\n  )\n}\n\nPublicRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom'\n\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\n  return (\n    <Route {...rest } component={( props ) => (( isAuthenticated ) ? (<Component {...props } />) : (<Redirect to=\"/auth/login\" />))} />\n  );\n}\n\nPrivateRoute.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n};\n","import React from 'react'\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n  const dispatch = useDispatch();\n\n  const noteDate = moment( date );\n\n  const handleEntryClick = () => {\n    dispatch( activeNote( id, { date, title, body, url }));\n  }\n\n  return (\n    <div onClick={ handleEntryClick } className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\">\n      { url &&\n        <div className=\"journal__entry--picture\" style={{\n          backgroundSize: 'cover',\n          backgroundImage: `url(${ url })`\n        }}></div>\n      }\n\n      <div className=\"journal__entry--body\">\n        <p className=\"journal__entry--body-tittle\">{ title }</p>\n        <p className=\"journal__entry--body-content\">{ body }</p>\n      </div>\n\n      <div className=\"journal__entry--date-box\">\n        <span>{ noteDate.format('dddd') }</span>\n        <h4>{ noteDate.format('Do') }</h4>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry';\nimport { useSelector } from 'react-redux';\n\nexport const JournalEntries = () => {\n\n  const { notes } = useSelector( state => state.notes );\n  \n  return (\n    <div className=\"journal__entries\">\n      \n      {\n        notes.map( note => (\n          <JournalEntry key={ note.id } {...note} />\n        ))\n      }\n      \n    </div>\n  );\n}\n","import React from 'react'\nimport { JournalEntries } from './JournalEntries'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nexport const Sidebar = () => {\n\n  const dispatch = useDispatch();\n  const { name } = useSelector( state => state.auth );\n\n  const handleLogout = () => {\n    dispatch( startLogout());\n };\n\n const handleAddNew = () => {\n   dispatch( startNewNote());\n }\n\n  return (\n    <aside className=\"journal__sidebar\">\n\n      <div className=\"journal__sidebar--navbar\">\n        <h3 className=\"mt-5\">\n          <i className=\"far fa-moon\"></i>\n          <span> { name }</span>\n        </h3>\n\n        <button onClick={ handleLogout } className=\"btn\">Logout</button>\n      </div>\n\n      <div onClick={ handleAddNew } className=\"journal__new-entry\">\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\n        <p className=\"mt-5 \">New Entry</p>\n      </div>\n\n      <JournalEntries />\n      \n    </aside>\n  );\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n  const dispatch = useDispatch();\n  const { active } = useSelector( state => state.notes );\n\n  const handleSave = () => {\n    dispatch( startSaveNote( active ));\n  };\n\n  const handlePictureClick = () => {\n    // dispatch( startSaveNote( active ));\n    document.querySelector('#fileSelector').click();\n  };\n\n  const handleFileChange = ( e ) => {\n    e.preventDefault();\n\n    const file = e.target.files[0];\n\n    if (file) {\n      dispatch( startUploading( file ));\n    }\n  };\n  \n  return (\n    <div className=\"notes__appbar\">\n      <span>27 de Agosto 2020</span>\n\n      <input id=\"fileSelector\" onChange={ handleFileChange } type=\"file\" name=\"file\" style={{ display: 'none' }}/>\n\n      <div>\n        <button onClick={ handlePictureClick } className=\"btn\">Picture</button>\n        <button onClick={ handleSave } className=\"btn\">Save</button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from 'react'\nimport { NotesAppBar } from './NotesAppBar'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting } from '../../actions/notes';\n\nexport const NoteScreen = () => {\n\n  const dispatch = useDispatch();\n  const { active: note } = useSelector( state => state.notes );\n  const [{ id, body, title, date, url }, handleInputChange, reset ] = useForm( note );\n  const activeId = useRef( note.id );\n\n  useEffect(() => {\n\n    if (note.id !== activeId.current) {\n      reset( note );\n      activeId.current = note.id\n    }\n  }, [ reset, note ]);\n\n  useEffect(() => {\n  \n    dispatch( activeNote( id, { id, title, body, date, url }));\n  \n  }, [ dispatch, id, title, body, date, url ]);\n  \n  const handleDelete = () => {\n    dispatch( startDeleting( id ));\n  };\n\n  return (\n    <div className=\"notes__main-content\">\n      <NotesAppBar />\n\n      <div className=\"notes__content\">\n        <input value={ title } onChange={ handleInputChange } name=\"title\" type=\"text\" className=\"notes__content--title-input\" autoComplete=\"off\" placeholder=\"Some awesome title\"></input>\n\n        <textarea value={ body } onChange={ handleInputChange } name=\"body\" className=\"notes__content--textarea\" placeholder=\"What happened today?\"></textarea>\n\n        { url &&\n          <div className=\"notes__content--image\">\n            <img alt=\"imagen\" src={ url } />\n          </div>\n        }\n      </div>\n\n      <button onClick={ handleDelete } className=\"btn btn--danger\">Delete</button>\n      \n    </div>\n  );\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n  return (\n    <div className=\"noting__main-content\">\n      <p>\n        Select something\n        <br />\n        pr create an entry\n      </p>\n\n      <i className=\"far fa-star fa-4x mt_5\"></i>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\nexport const JournalScreen = () => {\n\n  const { active } = useSelector( state => state.notes );\n  \n  return (\n    <div className=\"journal__main-container animate__animated animate__fadeIn animate__faster\">\n      <Sidebar />\n\n      <main>\n        {(active) ? (<NoteScreen />) : (<NothingSelected />)}\n      </main>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport { firebase } from \"../firebase/config\";\nimport { AuthRouter } from './AuthRouter';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { startLoadingNotes } from '../actions/notes';\n\n \nexport const AppRouter = () => {\n\n  const dispatch = useDispatch();\n  const [checking, setChecking] = useState( true );\n  const [isLoggedIn, setIsLoggedIn] = useState( false );\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged( user => {\n      if (user?.uid) {\n        dispatch( login( user.uid, user.displayName ));\n        setIsLoggedIn( true );\n\n        dispatch( startLoadingNotes( user.uid  ));\n        \n      } else {\n        setIsLoggedIn( false );\n      }\n      setChecking( false );\n    });\n  }, [ dispatch, setChecking, setIsLoggedIn ]);\n\n  if (checking) {\n    return (\n      <h1>Wait...</h1>\n    )\n  }\n  \n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute path=\"/auth\" isAuthenticated={ isLoggedIn } component={ AuthRouter } />\n          <PrivateRoute exact path=\"/\" isAuthenticated={ isLoggedIn } component={ JournalScreen } />\n        </Switch>\n      </div>\n    </Router>  \n  );\n}\n","import React from 'react'\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\n\nexport const JournalApp = () => {\n  return (\n    <Provider store={ store }>\n      <AppRouter />\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}